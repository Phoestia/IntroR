#lecture 1
install.packages('ggplot2')
library(ggplot2)
y

v=c(1,4,4,3,2,2,3)
v[c(2,3,4)]
v[2:4]
v[c(2,4,3)]
v[-2]
v[-2:-4]
v[v<3]
which(v==3)
which.max(v)

set.seed(250)
a=runif(3, min=0, max=100)
floor(a) #只保留整数
ceiling(a)#下一个整数
round(a,4) #4位小数
rnorm(3)

data1=read.csv(file="~/documents/rugby.txt")
data2=read.table(file="~/documents/rugby.txt")
attach(data3)
year

set.seed(123)
x=rnorm(100,mean=100,sd=10)
set.seed(234)
y=rnorm(100,mean=100,sd=10)
hist(x, breaks=20)
plot(density(x))
plot(x)
boxplot(x,y)
boxplot(time~sex)#time根据SEX分布
qqnorm(x)
qqline(x)
qqplot(x,y)

#lecture 2
a=c(1, 2, 5, 3, 6, -2, 4)
b=c("one", "two", "three")
c=c(TRUE, TRUE, TRUE, FALSE, TRUE, FALSE)

x=matrix(1:20, nrow=5, ncol=4, byrow=TRUE)#按行排
x
y=matrix(1:20, nrow=5, ncol=4, byrow=FALSE)#按列排
y
x[2,]
x[,2]
x[1,4]
x[2,c(2,4)]
x[3:5, 2]
rnames=c('apple', 'banana', 'orange', 'melon', 'corn')
cnames=c('cat', 'dog', 'bird', 'pig')
x=matrix(1:20, nrow=5, ncol=4, byrow=TRUE)#按行排
rownames(x)=rnames
colnames(x)=cnames

dim1 = c("A1", "A2")
dim2 = c("B1", "B2", "B3")
dim3 = c("C1", "C2", "C3", "C4")
dim4 = c("D1", "D2", "D3")
z = array(1:72, c(2, 3, 4, 3), dimnames=list(dim1, dim2, dim3, dim4))
z
z[1,2,3,]

patientID = c(1, 2, 3, 4)
age = c(25, 34, 28, 52)
diabetes = c("Type1", "Type2", "Type1", "Type1")
status = c("Poor", "Improved", "Excellent", "Poor")
patientdata = data.frame(patientID, age, diabetes, status)
patientdata
swim = read.csv("http://www.macalester.edu/~kaplan/ISM/datasets/swim100m.csv")
patientdata[1:2]
patientdata[1:3]
patientdata[1,1:3]
patientdata[c(1,3),1:3] #or patientdata[1:3,1:3]

mylist = list(patientdata, swim, x)
mylist

par(mfrow=c(2,2))
plot(rnorm(50),pch=17)
plot(rnorm(20),type="l",lty=5)
plot(rnorm(100),cex=0.5)
plot(rnorm(200),lwd=2)

attach(mtcars)
mtcars
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
hist(wt)
hist(mpg)
hist(disp)
detach(mtcars)

#Lecture 3

x = matrix(1:20, nrow=5, ncol=4, byrow=TRUE)
swim = read.csv("http://www.macalester.edu/~kaplan/ISM/datasets/swim100m.csv")
mylist=list(swim,x)
mylist[[2]][2]#2 是确定用哪一个List
mylist[[2]][1:2]
mylist[[2]][1:2,3]
mylist[[2]][1:2,]

for(i in 1:10){
  print(i)
}
i = 1
while(i <= 10){
  print(i)
  i=i+1
}

i = 1
if(i == 1){
  print("Hello World")
}

i = 2
if(i == 1){
  print("Hello World!")
}else{
  print("Goodbye World!")
}

feelings = c("sad", "afraid")
for (i in feelings){
  print(
    switch(i,
           happy  = "I am glad you are happy",
           afraid = "There is nothing to fear",
           sad    = "Cheer up",
           angry  = "Calm down now"
    )
  )
}


myfunction = function(x,a,b,c){
  return(a*sin(x)^2 - b*x + c)
}
curve(myfunction(x,20,3,4),xlim=c(1,20))
#par(mfrow=c(1,1))  clear par
myfeeling = function(x){
  for (i in x){
    print(
      switch(i,
             happy  = "I am glad you are happy",
             afraid = "There is nothing to fear",
             sad    = "Cheer up",
             angry  = "Calm down now"
      )
    )
  }
}
feelings = c("sad", "afraid")
myfeeling(feelings)

#Lecture 4
#Bar Chart
install.packages("vcd")
library(vcd)#提数据
counts = table(Arthritis$Improved)
counts
par(mfrow=c(2,2))
barplot(counts,
        main="Simple Bar Plot",
        xlab="Improvement", ylab="Frequency")

barplot(counts,
        main="Horizontal Bar Plot",
        xlab="Frequency", ylab="Improvement",
        horiz=TRUE)

counts <- table(Arthritis$Improved, Arthritis$Treatment)
counts

barplot(counts,
        main="Stacked Bar Plot",
        xlab="Treatment", ylab="Frequency",
        col=c("red", "yellow","green"),
        legend=rownames(counts))

barplot(counts,
        main="Grouped Bar Plot",
        xlab="Treatment", ylab="Frequency",
        col=c("red", "yellow", "green"),
        legend=rownames(counts), beside=TRUE)

#Pie Chart
install.packages("plotrix")
library(plotrix)
par(mfrow=c(2,2))
slices <- c(10, 12,4, 16, 8)#数据来源
lbls <- c("US", "UK", "Australia", "Germany", "France")
pie(slices, labels = lbls,main="Simple Pie Chart",edges=300,radius=1)
pct <- round(slices/sum(slices)*100)
lbls2 <- paste(lbls, " ", pct, "%", sep="") #把每一个国家的各项数据黏贴：us+uspct+%符号＋分割空格
pie(slices, labels=lbls2, col=rainbow(length(lbls2)),
    main="Pie Chart with Percentages",edges=300,radius=1)
pie3D(slices, labels=lbls,explode=0.5,
      main="3D Pie Chart ",edges=300,radius=1)#explode means how sperate
mytable <- table(state.region)
lbls3 <- paste(names(mytable), "\n", mytable, sep="")
pie(mytable,labels=lbls3,
    main="Pie Chart from a Table\n(with sample size)",
    edges=300,radius=1)
#Fan Plot
slices <- c(10, 12,4, 16, 8)
lbls <- c("US", "UK", "Australia", "Germany", "France")
fan.plot(slices, labels = lbls, main="Fan Plot")

#Dot Chart
dotchart(mtcars$mpg, 
         labels=row.names(mtcars),cex=0.7,
         main="Gas Mileage for Car Models",
         xlab="Miles Per Gallon")

#summary
head(mtcars)
summary(mtcars)

#Tables
attach(mtcars)
table(cyl)
summary(mpg)
table(cut(mpg,seq(10,34,by=2)))#10-34的Cut

#Correlations
states = state.x77[,1:6]
cov(states)#协方差
var(states)
cor(states)

#T test
x = rnorm(100, mean = 10, sd = 1)
y = rnorm(100, mean = 30, sd = 10)
t.test(x, y, alt = "two.sided",paired=TRUE)
#Alternative:双向／小于／大于
#mu平均数 默认为0
#var.equale， Paired 一一对应
#p很小表示X和Y不想等
#Wilcoxon 系统会自动识别用Wilcoxon rank sum or signed rank test
wilcox.test(x,y,alt="less")
#p-vale小表示Y大与X 上面设的Less

#Practical Example
data=read.csv("~/documents/R Programming/project/STAT.csv")
attach(data)
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE))
hist(difference,col="blue")
hist(Target,col="blue")
hist(Walmart,col="blue")

par(mfrow=c(2,1))
boxplot(data[2:4],horizontal=TRUE)
boxplot(difference,horizontal=TRUE)

par(mfrow=c(1,1))
qqnorm(difference)
qqline(difference)
t.test(difference,alter="two.sided")
binom.test(length(difference[difference>=0]),
           length(difference), 
           alter="two.sided")
wilcox.test(difference,alter="two.sided")

install.packages('nortest')
library(nortest)
ad.test(difference)


#Lecture 5


#R for MATLAB users: 
#http://mathesaurus.sourceforge.net/octave-r.html
set.seed(123)
A = matrix(sample(100,15), nrow=5, ncol=3)
set.seed(234)
B = matrix(sample(100,15), nrow=5, ncol=3)
set.seed(321)
X = matrix(sample(100,25), nrow=5, ncol=5)
set.seed(213)
b = matrix(sample(100,5),nrow=5, ncol=1)
A
B
X
b
#  + - * / ^
#Element-wise addition, subtraction, multiplication, division
#, and exponentiation, respectively.
A + 2
A * 2
A ^ 2

#Matrix multiplication
t(A) %*% B 

#Returns a vector containing the column means of A.
colMeans(A)

#Returns a vector containing the column sums of A.
colSums(A)

#Returns a vector containing the row means of A.
rowMeans(A)

#Returns a vector containing the row sums of A.
rowSums(A)


#Matrix Crossproduct
# A'A
crossprod(A)
# A'B
crossprod(A,B)

#Inverse of A where A is a square matrix.
solve(X)

#Solves for vector x in the equation b = Ax.
# b = Xv
v = solve(X, b)
v
#对角线Returns a vector containing the elements of the principal diagonal
diag(X)

#Creates a diagonal matrix with the elements of x in the principal diagonal.
diag(c(1,2,3,4))

#If k is a scalar, this creates a k x k identity matrix.
diag(5)

#Eigenvalues and eigenvectors of A.
eigen(X)


#Lecture 6 Factor

# FACTOR
factor = factor(rep(c(1:3),times=5))
factor
X = sample(100,15)
X
?tapply
tapply(X,factor,mean)#X里所有数按123123标记，然后求出1的Mean，2的Mean 3的Mean
rbind(X,factor)
boo = rbind(X,factor)[2,]==1
boo
which(boo)
rbind(X,factor)[1,which(boo)]
sum(rbind(X,factor)[1,which(boo)])/length(which(boo))
